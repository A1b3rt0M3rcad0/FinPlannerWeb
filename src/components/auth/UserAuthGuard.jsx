import { Navigate, useLocation } from "react-router-dom";
import { useAuth } from "../../hooks/useAuth";
import LoadingSpinner from "../ui/LoadingSpinner";
import { ROUTES } from "../../config/constants";

/**
 * Guard para proteger rotas de usu√°rio comum
 * Apenas usu√°rios autenticados que N√ÉO s√£o admin podem acessar
 */
export default function UserAuthGuard({ children }) {
  const { isAuthenticated, loading, user } = useAuth();
  const location = useLocation();

  console.log("üõ°Ô∏è UserAuthGuard:", {
    path: location.pathname,
    isAuthenticated,
    loading,
    hasUser: !!user,
    userType: user?.user_type,
    role: user?.role,
  });

  if (loading) {
    console.log("‚è≥ UserAuthGuard - Carregando autentica√ß√£o...");
    return <LoadingSpinner message="Carregando seu dashboard..." />;
  }

  // Se n√£o est√° autenticado, redireciona para login de usu√°rio
  if (!isAuthenticated) {
    console.log(
      "‚ùå UserAuthGuard - N√£o autenticado - redirecionando para login"
    );
    return <Navigate to={ROUTES.LOGIN} replace state={{ from: location }} />;
  }

  // Verifica se √© admin (se for, redireciona para dashboard admin)
  const isAdmin =
    user?.user_type === "admin" ||
    user?.role === "admin" ||
    user?.is_super_admin;

  if (isAdmin) {
    console.log(
      "‚ö†Ô∏è UserAuthGuard - Usu√°rio √© admin - redirecionando para dashboard admin"
    );
    return <Navigate to={ROUTES.DASHBOARD} replace />;
  }

  console.log("‚úÖ UserAuthGuard aprovado - renderizando p√°gina de usu√°rio");
  return children;
}
